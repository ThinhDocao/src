@model S3Train.Models.ProductViewModel

@{
    /**/

    /**/

    ViewBag.Title = "Update";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@section scripts
{
    <link href="~/Content/themes/base/jquery.datetimepicker.min.css" rel="stylesheet" />
    <script src="~/Content/themes/base/jquery.datetimepicker.full.js"></script>

    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script>
        $('.datepicker').datetimepicker(
            {
                step: 10
            });
        //$(function () {
        //    $('.datepicker').datepicker({
        //        dateFormat: "mm/dd/yy hh:mm",
        //        changeMonth: true,
        //        changeYear: true,
        //        showOn: "both",
        //        buttonText: "<i class='fa fa-calendar'></i>"

        //    });
        //});

    </script>
    <script>
        $('#btnSelectImage').on('click', function (e) {
            e.preventDefault();
            var finder = new CKFinder();
            finder.selectActionFunction = function (url) {
                $('#txtImage').val(url);
            };
            finder.popup();
        })

        var editor = CKEDITOR.replace('txtContent', {
            customConfig: '/Assets/ckeditor/config.js',
        })
    </script>
}
<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ProductViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" }, @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" }, @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descriptions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Descriptions, new { htmlAttributes = new { @class = "form-control" }, @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Descriptions, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" }, id = "txtImage", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label>
                    @Html.TextBoxFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @id = "currency", @type = "number", @title = "currency", @value = "30", @min = "0", @max = "10000", @style = "width: 100%" }, @readonly = "readonly" })
                </label>
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.PromotionPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label>
                    @Html.TextBoxFor(model => model.PromotionPrice, new { htmlAttributes = new { @class = "form-control", @id = "currency", @type = "number", @title = "currency", @value = "30", @min = "0", @max = "10000", @style = "width: 100%" }, @readonly = "readonly" })
                </label>
                @Html.ValidationMessageFor(model => model.PromotionPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreateDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label>
                    @Html.TextBoxFor(model => model.CreateDate, new { htmlAttributes = new { @class = "form-control", @id = "currency", @type = "number", @title = "currency", @value = "30", @min = "0", @max = "10000", @style = "width: 100%" }, @readonly = "readonly" })
                </label>
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CreateBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label>
                    @Html.TextBoxFor(model => model.CreateBy, new { htmlAttributes = new { @class = "form-control", @id = "currency", @type = "number", @title = "currency", @value = "30", @min = "0", @max = "10000", @style = "width: 100%" }, @readonly = "readonly" })
                </label>
                @Html.ValidationMessageFor(model => model.CreateBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModifiedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label>
                    @Html.TextBoxFor(model => model.ModifiedDate, new { htmlAttributes = new { @class = "form-control", @id = "currency", @type = "number", @title = "currency", @value = "30", @min = "0", @max = "10000", @style = "width: 100%" }, @readonly = "readonly" })
                </label>
                @Html.ValidationMessageFor(model => model.ModifiedDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModifiedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label>
                    @Html.TextBoxFor(model => model.ModifiedBy, new { htmlAttributes = new { @class = "form-control", @id = "currency", @type = "number", @title = "currency", @value = "30", @min = "0", @max = "10000", @style = "width: 100%" }, @readonly = "readonly" })
                </label>
                @Html.ValidationMessageFor(model => model.ModifiedBy, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" }, @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Detail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Detail, new { htmlAttributes = new { @class = "form-control" }, id = "txtContent", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Warranty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Warranty, new { htmlAttributes = new { @class = "form-control" }, @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Warranty, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.TopHot, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.TopHot, new { htmlAttributes = new { @class = "datepicker" }, @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.TopHot, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Brand_Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Brand_Id, new SelectList(ViewBag.brand, "Id", "Name", null), new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Brand_Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductCategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ProductCategoryId, null, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductCategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ViewCount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label>
                    @Html.DisplayFor(model => model.ViewCount, new { @class = "form-control", @id = "currency", @type = "number", @title = "currency", @value = "30", @min = "0", @max = "10000", @style = "width: 100%", @readonly = "readonly" })
                </label>
                @Html.ValidationMessageFor(model => model.ViewCount, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>
}
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
